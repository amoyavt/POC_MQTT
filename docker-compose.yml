services:
  # Certificate Generation Service
  certgen-api:
    build:
      context: .
      dockerfile: services/certgen_api/Dockerfile
    container_name: certgen-api
    ports:
      - "8080:8080"
    volumes:
      - ./ca:/ca
      - ./issued:/issued
      - ./services/certgen_api/logs:/app/logs
    environment:
      - CA_CN=${CA_CN} # Common Name for the CA
      - CA_EXPIRY=${CA_EXPIRY} # CA validity in days
      - BROKER_CN=${BROKER_CN} # Common Name for the MQTT broker
      - BROKER_EXPIRY=${BROKER_EXPIRY} # Broker certificate validity in days
      - DEVICE_EXPIRY=${DEVICE_EXPIRY} # Device certificate validity in days
      - OPENSSL_CNF=/ca/openssl.cnf # Path to OpenSSL configuration file
      - CA_KEY=/ca/ca.key # Path to CA private key
      - CA_CERT=/ca/ca.crt # Path to CA certificate
    networks:
      - iot-network

  # MQTT Broker with mTLS Security
  mqtt-broker:
    build:
      context: .
      dockerfile: services/mqtt_broker/Dockerfile
    container_name: mqtt-broker
    depends_on:
      - certgen-api
    ports:
      - "8883:8883"
    volumes:
      - ./services/mqtt_broker/data:/mosquitto/data # Data directory for Mosquitto
      - ./services/mqtt_broker/log:/mosquitto/log # Log directory for Mosquitto
    networks:
      - iot-network
    restart: unless-stopped

  # MQTTX Client for Monitoring
  # mqtt-logger:
    

  # FACES2 Device Simulator with mTLS
  faces2-controllers:
    build:
      context: .
      dockerfile: services/faces2_controllers/Dockerfile
    container_name: faces2-controllers
    depends_on:
      - certgen-api
      - mqtt-broker
    environment:
      - BROKER_CN=${BROKER_CN} # Broker certificate CN for SSL validation
      - MQTT_BROKER_HOST=mqtt-broker # MQTT broker hostname
      - CERTGEN_API_HOST=certgen-api # Certificate generation API hostname (fixed service name)
      - PUBLISH_INTERVAL=5 # Sensor data publishing interval in seconds
    volumes:
      - ./services/faces2_controllers/certs:/app/certs
    networks:
      - iot-network
    restart: unless-stopped

networks:
  iot-network:
    driver: bridge